Search.setIndex({"alltitles": {"AO Restricted Fock Op": [[1, null]], "APIs:": [[0, null]], "Charge-Charge Interaction via Coulomb\u2019s Law": [[2, "charge-charge-interaction-via-coulomb-s-law"]], "Coulomb\u2019s Law": [[2, null]], "Density": [[1, "density"], [4, "density"]], "Detailed Descriptions": [[1, "detailed-descriptions"], [2, "detailed-descriptions"], [3, "detailed-descriptions"], [4, "detailed-descriptions"]], "Generalized Eigen Solve via Eigen": [[3, "generalized-eigen-solve-via-eigen"]], "Generalized eigensolve via Eigen": [[3, null]], "Hamiltonian": [[1, "hamiltonian"], [4, "hamiltonian"]], "Matrix": [[3, "matrix"]], "Metric": [[3, "metric"]], "Module Inputs": [[1, "module-inputs"], [2, "module-inputs"], [3, "module-inputs"], [4, "module-inputs"]], "Module Results": [[1, "module-results"], [2, "module-results"], [3, "module-results"], [4, "module-results"]], "Modules API": [[5, null]], "Objects": [[2, "objects"]], "Please Cite": [[1, "please-cite"], [2, "please-cite"], [3, "please-cite"], [4, "please-cite"]], "Potential": [[2, "potential"]], "Property Types": [[1, "property-types"], [2, "property-types"], [3, "property-types"], [4, "property-types"]], "Quick Reference": [[1, "quick-reference"], [2, "quick-reference"], [3, "quick-reference"], [4, "quick-reference"]], "Restricted Fock Op": [[4, null]], "Restricted Fock Operator Builder": [[1, "restricted-fock-operator-builder"], [4, "restricted-fock-operator-builder"]], "SCF": [[0, null]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"]]}, "docnames": ["index", "module_api/AO_Restricted_Fock_Op", "module_api/Coulomb's_Law", "module_api/Generalized_eigensolve_via_Eigen", "module_api/Restricted_Fock_Op", "module_api/index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["index.rst", "module_api/AO_Restricted_Fock_Op.rst", "module_api/Coulomb's_Law.rst", "module_api/Generalized_eigensolve_via_Eigen.rst", "module_api/Restricted_Fock_Op.rst", "module_api/index.rst"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [0, 1, 3, 4, 5], "1": 2, "2j": [1, 4], "A": [1, 2, 3, 4], "No": [1, 2, 3, 4], "The": [1, 2, 3, 4], "accept": [1, 2, 3, 4], "access": [1, 2, 3, 4], "addit": [1, 2, 3, 4], "advanc": [1, 2, 3, 4], "ao": [0, 5], "api": [1, 2, 3, 4], "ar": [1, 2, 3, 4], "argument": [1, 2, 3, 4], "assumpt": [1, 4], "avail": [1, 2, 3, 4], "basi": 3, "befor": [1, 2, 3, 4], "build": [1, 4], "c": [0, 1, 2, 3, 4], "call": [1, 2, 3, 4], "can": [1, 2, 3, 4], "case": 2, "change_input": [1, 2, 3, 4], "chemist": [1, 2, 4], "citat": [1, 2, 3, 4], "class": [1, 2, 3, 4], "column": [1, 2, 3, 4], "common": 2, "comput": [1, 2, 3, 4], "coulomb": [0, 1, 4, 5], "creat": [1, 4], "criteria": [1, 2, 3, 4], "decomposabledens": 4, "deem": [1, 2, 3, 4], "default": [1, 2, 3, 4], "defin": [1, 2, 3, 4], "denomin": 2, "diagon": 3, "disjoint": 2, "doe": [1, 2, 3, 4], "domain": [1, 2, 3, 4], "doubl": 2, "e_q": 2, "each": [1, 2, 3, 4], "eigen": [0, 5], "eigensolv": [0, 5], "electron": [1, 4], "electrostat": 2, "electrostaticenergi": 2, "energi": 2, "equal": 2, "except": [1, 4], "exchang": [1, 4], "exist": [1, 2, 3, 4], "fals": [1, 2, 3, 4], "fock": [0, 5], "fockoper": [1, 4], "follow": [1, 2, 3, 4], "frac": 2, "full": [1, 2, 3, 4], "function": [1, 2, 3, 4], "gener": [0, 2, 5], "generalizedeigensolv": 3, "given": [1, 2, 3, 4], "ha": 2, "have": [1, 2, 3, 4], "head": [1, 2, 3, 4], "how": [1, 2, 3, 4], "human": [1, 2, 3, 4], "i": [1, 2, 3, 4], "includ": 2, "influenc": [1, 2, 3, 4], "initi": [1, 2, 3, 4], "inord": [1, 2, 3, 4], "interact": [1, 4], "itself": [1, 4], "j": [1, 2, 4], "k": [1, 4], "kei": [1, 2, 3, 4], "law": [0, 5], "left": 2, "let": 2, "list": [1, 2, 3, 4], "manual": [1, 2, 3, 4], "map": [1, 4], "mathbf": 2, "me": 3, "memoiz": [1, 2, 3, 4], "modul": 0, "must": [1, 2, 3, 4], "n": [1, 2, 3, 4], "n_": 2, "n_q": 2, "name": [1, 2, 3, 4], "obei": [1, 2, 3, 4], "one": [1, 2, 3, 4], "onli": [1, 2, 3, 4], "op": [0, 5], "opaqu": [1, 2, 3, 4], "option": [1, 2, 3, 4], "other": [1, 2, 3, 4], "pass": [1, 2, 3, 4], "point": 2, "posit": 2, "provid": [1, 2, 3, 4], "q": 2, "q_i": 2, "q_j": 2, "qm_oper": [1, 4], "r": 2, "r_i": 2, "r_j": 2, "readabl": [1, 2, 3, 4], "recogn": [1, 2, 3, 4], "repuls": [1, 4], "respect": [1, 2, 3, 4], "restrict": [0, 2, 3, 5], "retriev": [1, 2, 3, 4], "return": [1, 2, 3, 4], "right": 2, "run": [1, 2, 3, 4], "same": [1, 4], "satisfi": [1, 2, 3, 4], "scenario": 2, "section": [1, 2, 3, 4], "set": [1, 2, 3, 4], "simd": [1, 2, 3, 4], "skip": 2, "sq": 2, "subsect": [1, 2, 3, 4], "subset": [1, 2, 3, 4], "sum_": 2, "summari": [1, 2, 3, 4], "tabl": [1, 2, 3, 4], "tabul": [1, 2, 3, 4], "tensor": 3, "tensorwrapp": 3, "term": [1, 2, 4], "th": 2, "thi": [1, 2, 3, 4], "todo": 3, "true": [1, 2, 3, 4], "under": [1, 4], "us": [1, 2, 3, 4], "v_": 2, "valid": [1, 2, 3, 4], "valu": [1, 2, 3, 4], "vector": 3, "via": [0, 5], "wa": [1, 2, 3, 4], "we": [1, 2, 3, 4], "what": [1, 2, 3, 4], "where": [1, 2, 4], "whether": [1, 2, 3, 4], "which": 2, "within": [1, 2, 3, 4], "write": 3, "zero": 2}, "titles": ["SCF", "AO Restricted Fock Op", "Coulomb\u2019s Law", "Generalized eigensolve via Eigen", "Restricted Fock Op", "Modules API"], "titleterms": {"": 2, "ao": 1, "api": [0, 5], "builder": [1, 4], "charg": 2, "cite": [1, 2, 3, 4], "coulomb": 2, "densiti": [1, 4], "descript": [1, 2, 3, 4], "detail": [1, 2, 3, 4], "eigen": 3, "eigensolv": 3, "fock": [1, 4], "gener": 3, "hamiltonian": [1, 4], "input": [1, 2, 3, 4], "interact": 2, "law": 2, "matrix": 3, "metric": 3, "modul": [1, 2, 3, 4, 5], "object": 2, "op": [1, 4], "oper": [1, 4], "pleas": [1, 2, 3, 4], "potenti": 2, "properti": [1, 2, 3, 4], "quick": [1, 2, 3, 4], "refer": [1, 2, 3, 4], "restrict": [1, 4], "result": [1, 2, 3, 4], "scf": 0, "solv": 3, "submodul": [1, 2, 3, 4], "type": [1, 2, 3, 4], "via": [2, 3]}})